name: Bump-Version
on:
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * *"
jobs:
  bump-version:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    env:
      COMMIT_USER_NAME: "Junichi Kato"
      COMMIT_USER_EMAIL: "j5ik2o@gmail.com"
      COMMIT_AUTHOR: "Junichi Kato <j5ik2o@gmail.com>"
      VERSION_FILE: "version"
      CHANGELOG_FILE: "changelog.txt"
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.PAT }}
      
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
          cache: 'pip'
      
      - name: Install dependencies
        run: pip install semver
      
      # Migrate complex logic to script
      - name: Analyze version changes
        id: version
        run: python .github/scripts/version-manager.py prepare-release
      
      # Use action for commit processing
      - name: Commit version changes
        if: steps.version.outputs.has_changes == 'true'
        uses: stefanzweifel/git-auto-commit-action@v5
        id: commit
        with:
          commit_message: "version up to ${{ steps.version.outputs.next_tag }}"
          tagging_message: "${{ steps.version.outputs.next_tag }}"
          commit_user_name: ${{ env.COMMIT_USER_NAME }}
          commit_user_email: ${{ env.COMMIT_USER_EMAIL }}
          commit_author: ${{ env.COMMIT_AUTHOR }}
          file_pattern: "${{ env.VERSION_FILE }}"  # Commit only the version file
      
      # Create a GitHub release with action
      - name: Create GitHub Release
        if: steps.version.outputs.has_changes == 'true'
        id: release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.version.outputs.next_tag }}
          body_path: ${{ env.CHANGELOG_FILE }}
          generate_release_notes: true  # Enable GitHub's automatic release notes generation
          token: ${{ secrets.PAT }}
      
      # Create a snapshot version
      - name: Create snapshot version
        id: snapshot
        if: steps.version.outputs.has_changes == 'true'
        run: python .github/scripts/version-manager.py create-snapshot
      
      # Commit the snapshot version
      - name: Commit snapshot version
        if: steps.version.outputs.has_changes == 'true'
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "version up to ${{ steps.snapshot.outputs.snapshot_version }}"
          commit_user_name: ${{ env.COMMIT_USER_NAME }}
          commit_user_email: ${{ env.COMMIT_USER_EMAIL }}
          commit_author: ${{ env.COMMIT_AUTHOR }}
          file_pattern: "${{ env.VERSION_FILE }}"  # Commit only the version file
